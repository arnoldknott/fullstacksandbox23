# fmt: off
# ruff: noqa
# isort:skip_file
"""""

Revision ID: 7fd1046d6acc
Revises: 34eec7ff0972
Create Date: 2025-06-23 15:14:11.157360+02:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '7fd1046d6acc'
down_revision: Union[str, None] = '34eec7ff0972'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('identifiertypelink',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_identifiertypelink_type'), 'identifiertypelink', ['type'], unique=False)
    op.create_table('identityhierarchy',
    sa.Column('parent_id', sa.Uuid(), nullable=False),
    sa.Column('child_id', sa.Uuid(), nullable=False),
    sa.Column('inherit', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('parent_id', 'child_id'),
    sa.UniqueConstraint('parent_id', 'child_id')
    )
    op.create_table('resourcehierarchy',
    sa.Column('parent_id', sa.Uuid(), nullable=False),
    sa.Column('child_id', sa.Uuid(), nullable=False),
    sa.Column('inherit', sa.Boolean(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('parent_id', 'child_id'),
    sa.UniqueConstraint('parent_id', 'child_id')
    )
    op.create_index(op.f('ix_resourcehierarchy_order'), 'resourcehierarchy', ['order'], unique=False)
    op.create_table('accesslog',
    sa.Column('identity_id', sa.Uuid(), nullable=True),
    sa.Column('resource_id', sa.Uuid(), nullable=False),
    sa.Column('action', sa.Enum('read', 'write', 'own', name='action'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['identity_id'], ['identifiertypelink.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_accesslog_action'), 'accesslog', ['action'], unique=False)
    op.create_index(op.f('ix_accesslog_identity_id'), 'accesslog', ['identity_id'], unique=False)
    op.create_index(op.f('ix_accesslog_resource_id'), 'accesslog', ['resource_id'], unique=False)
    op.create_index(op.f('ix_accesslog_time'), 'accesslog', ['time'], unique=False)
    op.create_table('accesspolicy',
    sa.Column('identity_id', sa.Uuid(), nullable=True),
    sa.Column('resource_id', sa.Uuid(), nullable=False),
    sa.Column('action', sa.Enum('read', 'write', 'own', name='action'), nullable=False),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['identity_id'], ['identifiertypelink.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identity_id', 'resource_id')
    )
    op.create_index(op.f('ix_accesspolicy_identity_id'), 'accesspolicy', ['identity_id'], unique=False)
    op.create_index(op.f('ix_accesspolicy_resource_id'), 'accesspolicy', ['resource_id'], unique=False)
    op.create_table('azuregroup',
    sa.Column('azure_tenant_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_azuregroup_id'), 'azuregroup', ['id'], unique=False)
    op.create_table('category',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=12), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('demofile',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_demofile_name'), 'demofile', ['name'], unique=True)
    op.create_table('group',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_name'), 'group', ['name'], unique=False)
    op.create_table('protectedchild',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('protectedgrandchild',
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('protectedresource',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('publicresource',
    sa.Column('comment', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subgroup',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subgroup_name'), 'subgroup', ['name'], unique=False)
    op.create_table('subsubgroup',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subsubgroup_name'), 'subsubgroup', ['name'], unique=False)
    op.create_table('tag',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('uebergroup',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_uebergroup_name'), 'uebergroup', ['name'], unique=False)
    op.create_table('useraccount',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('is_publicAIuser', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_useraccount_user_id'), 'useraccount', ['user_id'], unique=False)
    op.create_table('userprofile',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('theme_color', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('theme_variant', sa.Enum('neutral', 'tonal_spot', 'vibrant', 'fidelity', 'content', 'rainbow', name='themevariants'), nullable=False),
    sa.Column('contrast', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userprofile_user_id'), 'userprofile', ['user_id'], unique=False)
    op.create_table('demoresource',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('category_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('azure_tenant_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_account_id', sa.Uuid(), nullable=True),
    sa.Column('user_profile_id', sa.Uuid(), nullable=True),
    sa.Column('azure_user_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.ForeignKeyConstraint(['user_account_id'], ['useraccount.id'], ),
    sa.ForeignKeyConstraint(['user_profile_id'], ['userprofile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_azure_user_id'), 'user', ['azure_user_id'], unique=True)
    op.create_table('azuregroupuserlink',
    sa.Column('azure_group_id', sa.Uuid(), nullable=False),
    sa.Column('uuid_data', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['azure_group_id'], ['azuregroup.id'], ),
    sa.ForeignKeyConstraint(['uuid_data'], ['user.azure_user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('azure_group_id', 'uuid_data')
    )
    op.create_table('demoresourcetaglink',
    sa.Column('demo_resource_id', sa.Uuid(), nullable=False),
    sa.Column('tag_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['demo_resource_id'], ['demoresource.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('demo_resource_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('demoresourcetaglink')
    op.drop_table('azuregroupuserlink')
    op.drop_index(op.f('ix_user_azure_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_table('demoresource')
    op.drop_index(op.f('ix_userprofile_user_id'), table_name='userprofile')
    op.drop_table('userprofile')
    op.drop_index(op.f('ix_useraccount_user_id'), table_name='useraccount')
    op.drop_table('useraccount')
    op.drop_index(op.f('ix_uebergroup_name'), table_name='uebergroup')
    op.drop_table('uebergroup')
    op.drop_table('tag')
    op.drop_index(op.f('ix_subsubgroup_name'), table_name='subsubgroup')
    op.drop_table('subsubgroup')
    op.drop_index(op.f('ix_subgroup_name'), table_name='subgroup')
    op.drop_table('subgroup')
    op.drop_table('publicresource')
    op.drop_table('protectedresource')
    op.drop_table('protectedgrandchild')
    op.drop_table('protectedchild')
    op.drop_index(op.f('ix_group_name'), table_name='group')
    op.drop_table('group')
    op.drop_index(op.f('ix_demofile_name'), table_name='demofile')
    op.drop_table('demofile')
    op.drop_table('category')
    op.drop_index(op.f('ix_azuregroup_id'), table_name='azuregroup')
    op.drop_table('azuregroup')
    op.drop_index(op.f('ix_accesspolicy_resource_id'), table_name='accesspolicy')
    op.drop_index(op.f('ix_accesspolicy_identity_id'), table_name='accesspolicy')
    op.drop_table('accesspolicy')
    op.drop_index(op.f('ix_accesslog_time'), table_name='accesslog')
    op.drop_index(op.f('ix_accesslog_resource_id'), table_name='accesslog')
    op.drop_index(op.f('ix_accesslog_identity_id'), table_name='accesslog')
    op.drop_index(op.f('ix_accesslog_action'), table_name='accesslog')
    op.drop_table('accesslog')
    op.drop_index(op.f('ix_resourcehierarchy_order'), table_name='resourcehierarchy')
    op.drop_table('resourcehierarchy')
    op.drop_table('identityhierarchy')
    op.drop_index(op.f('ix_identifiertypelink_type'), table_name='identifiertypelink')
    op.drop_table('identifiertypelink')
    # ### end Alembic commands ###

# fmt: on
