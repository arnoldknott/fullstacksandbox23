# fmt: off
# ruff: noqa
""""31f0ea883612b0766cc2db7a87ef3be18bca0c2d"

Revision ID: 93860947ce4e
Revises: 5c802fa452d2
Create Date: 2025-02-03 16:07:45.541155+01:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '93860947ce4e'
down_revision: Union[str, None] = '5c802fa452d2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('useraccount',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('is_publicAIuser', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_useraccount_user_id'), 'useraccount', ['user_id'], unique=False)
    op.create_table('userprofile',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('theme_color', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('theme_variant', sa.Enum('neutral', 'tonal_spot', 'vibrant', 'fidelity', 'content', 'rainbow', name='themevariants'), nullable=False),
    sa.Column('contrast', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['identifiertypelink.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userprofile_user_id'), 'userprofile', ['user_id'], unique=False)
    op.drop_constraint('accesspolicy_identity_id_resource_id_action_key', 'accesspolicy', type_='unique')
    op.create_unique_constraint(None, 'accesspolicy', ['identity_id', 'resource_id'])
    op.add_column('user', sa.Column('user_account_id', sa.Uuid(), nullable=True))
    op.add_column('user', sa.Column('user_profile_id', sa.Uuid(), nullable=True))
    op.create_foreign_key(None, 'user', 'useraccount', ['user_account_id'], ['id'])
    op.create_foreign_key(None, 'user', 'userprofile', ['user_profile_id'], ['id'])
    op.drop_column('user', 'is_publicAIuser')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('is_publicAIuser', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_column('user', 'user_profile_id')
    op.drop_column('user', 'user_account_id')
    op.drop_constraint(None, 'accesspolicy', type_='unique')
    op.create_unique_constraint('accesspolicy_identity_id_resource_id_action_key', 'accesspolicy', ['identity_id', 'resource_id', 'action'])
    op.drop_index(op.f('ix_userprofile_user_id'), table_name='userprofile')
    op.drop_table('userprofile')
    op.drop_index(op.f('ix_useraccount_user_id'), table_name='useraccount')
    op.drop_table('useraccount')
    # ### end Alembic commands ###

# fmt: on
