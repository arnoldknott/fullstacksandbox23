#!/bin/sh

# TBD: move environment file to a place, where frontend and backend can access it - maybe in the root folder. Or check if multiple env files are possible?
# TBD: consider moving most of this into pre-push?
# TBD: move into a script directory, commit to repo and then call from here / symlink here?
## SINGLE CONTAINER TESTS:
# docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env build
# docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env run -T --rm backend_api sh -c "black ."
# docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env run -T --rm backend_api sh -c "ruff format ."
# docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env run -T --rm backend_api sh -c "pytest -v"

# Get the build back in, when having less frequent changes and closer to release:
COMPOSE_PROJECT_NAME=test-fssb23 docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env build
COMPOSE_PROJECT_NAME=test-fssb23 docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env up -d
# TBD: put back in, when frontend is further developed:
COMPOSE_PROJECT_NAME=test-fssb23 docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env exec -T backend_api sh -c "isort --profile black ."
ISORT_EXIT_CODE=$?
COMPOSE_PROJECT_NAME=test-fssb23 docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env exec -T backend_api sh -c "ruff check --fix ."
RUFF_EXIT_CODE=$?
COMPOSE_PROJECT_NAME=test-fssb23 docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env exec -T backend_api sh -c "black ."
BLACK_EXIT_CODE=$?
git add ./backend/
COMPOSE_PROJECT_NAME=test-fssb23 docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env exec -T backend_api sh -c "pytest"
PYTEST_EXIT_CODE=$?
COMPOSE_PROJECT_NAME=test-fssb23 docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env exec -T frontend_svelte sh -c "npm run format"
NPM_FORMAT_EXIT_CODE=$?
COMPOSE_PROJECT_NAME=test-fssb23 docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env exec -T frontend_svelte sh -c "npm run lint"
NPM_LINT_EXIT_CODE=$?
git add ./frontend_svelte/
COMPOSE_PROJECT_NAME=test-fssb23 docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env exec -T frontend_svelte sh -c "npm run test:unit"
NPM_UNITTEST_EXIT_CODE=$?
COMPOSE_PROJECT_NAME=test-fssb23 docker compose -f compose.yml -f compose.override.test.yml --env-file backend/src/tests/.env down

cd infrastructure
COMPOSE_PROJECT_NAME=test-fssb23 docker compose build
COMPOSE_PROJECT_NAME=test-fssb23 docker compose run --rm --no-TTY --entrypoint 'tofu' tofu version
COMPOSE_PROJECT_NAME=test-fssb23 docker compose run --rm --no-TTY --entrypoint 'tofu' tofu fmt
TOFU_FMT_EXIT_CODE=$?
git add .

print_result() {
    if [ $1 -eq 0 ]; then
        echo "âœ… $2"
    else
        echo "ðŸ”¥ $2"
    fi
}

print_result $ISORT_EXIT_CODE "isort"
print_result $RUFF_EXIT_CODE "ruff"
print_result $BLACK_EXIT_CODE "black"
print_result $PYTEST_EXIT_CODE "pytest"
print_result $NPM_FORMAT_EXIT_CODE "npm format"
print_result $NPM_LINT_EXIT_CODE "npm lint"
print_result $NPM_UNITTEST_EXIT_CODE "npm unit test"
print_result $TOFU_FMT_EXIT_CODE "tofu fmt"